// src/services/ai.js
const axios = require("axios");

const SITE_URL = process.env.SITE_URL || "https://www.ichancy.com/";
const AI_MODEL = process.env.AI_MODEL || "qwen2.5:7b-instruct";

// ุดุจูุฉ Dokploy ุงูุฏุงุฎููุฉ
const OLLAMA_BASE =
  process.env.OLLAMA_BASE_URL ||
  (process.env.OLLAMA_URL || "").replace(/\/api\/.*$/, "") ||
  "http://ollama:11434";
const CHAT_URL = `${OLLAMA_BASE.replace(/\/$/, "")}/api/chat`;

// ุชูููุน ูููุฌุฉ ุงูุดุงููุฉ + ุชูุตูุฑ
function toShami(s = "") {
  const repl = [
    [/ูุฑุฌู/g, "ูู ุณูุญุช"],
    [/ูู ูุถูู/g, "ูู ุณูุญุช"],
    [/ุณูู /g, "ุฑุญ "],
    [/ูู ุจ/g, "ุงุนูู "],
    [/ุงูุฑุฌุงุก/g, "ูู ุณูุญุช"],
    [/ุงููููุฉ/g, "ุงููุจูุบ"],
    [/ูุนู/g, "ุงู"],
    [/ูุง ุจุฃุณ/g, "ูุง ูู ูุดููุฉ"],
  ];
  let out = s;
  for (const [a, b] of repl) out = out.replace(a, b);
  return out.replace(/\s+/g, " ").trim();
}
function clampTwoLines(text, maxChars = 180) {
  let t = text.trim();
  if (t.length > maxChars) t = t.slice(0, maxChars - 1) + "โฆ";
  t = t.replace(/[*_`>~]/g, "");
  return t.split(/\n+/).slice(0, 2).join("\n");
}

function buildSystemPrompt({ dialect = "shami", context = "" } = {}) {
  return [
    "ุฃูุช ูุณุงุนุฏ ูุงุชุณุงุจ ูุฎุฏูุฉ ุดุญู/ุณุญุจ ุฑุตูุฏ ุนูู ูููุน ุงูุดุงูุณู.",
    "ุงูุชุจ ุจุงูููุฌุฉ ุงูุดุงููุฉ ุงูููููุฉ (ูููุงุช ูุซู: ุชูุงูุ ุดูุ ูุฏูุดุ ูุญุธุฉุ ุฏุบุฑู).",
    "ุงูุฃุณููุจ: ูุฎุชุตุฑ ููุงุถุญุ ุณุทุฑ ุฃู ุณุทุฑูู ููุทุ ูุน ุฅูููุฌู ุฎูููุฉ (๐โโณ๐ณ).",
    `ูุง ุชุนุทู ุฑูุงุจุท ุบูุฑ ${SITE_URL} ููุง ุชุฎุชูู ูุนูููุงุช.`,
    "ูู ูุงูุต ูุนูููุฉุ ุงุณุฃู *ุณุคุงู ูุงุญุฏ ูุญุฏุฏ* ููุทุ ููุง ุชุนูุฏ ููุณ ุงูุณุคุงู ุฅุฐุง ุงูุฐูุฑ ูุจู.",
    "ูู ุงูุทูุจ ูุงุถุญุ ุฌุงูุจ ุฏุบุฑู ุจุฏูู ูู ูุฏูุฑุงู.",
    "ููุดุญู: (ุงููุนุจุฉ/ุงูููุตูุฉุ ุงููุจูุบุ ุงููIDุ ุทุฑููุฉ ุงูุฏูุน). ููุณุญุจ: (ุงููุจูุบุ ุทุฑููุฉ ุงูุงุณุชูุงูุ ุญุณุงุจ/ูุนุฑูู ุงูุงุณุชูุงู).",
    context ? `ูุนูููุงุช ุณูุงููุฉ:\n${context}` : "",
    "ุฃูุซูุฉ:",
    `ุงููุณุชุฎุฏู: ุจุฏู ุงูุฑุงุจุท\nุงููุณุงุนุฏ: ุฑุงุจุทูุง: ${SITE_URL} โ`,
    "ุงููุณุชุฎุฏู: ุจุฏู ุงุดุญู 20000 ู MLBB\nุงููุณุงุนุฏ: ุชูุงู! ุงุจุนุช ุงููID ูุทุฑููุฉ ุงูุฏูุน (ุณูุฑูุชูู ูุงุด/USDT/ุจููู) ๐",
    "ุงููุณุชุฎุฏู: ุจุฏู ุงุณุญุจ 700 ุฃูู\nุงููุณุงุนุฏ: ุชูุงู! ุทุฑููุฉ ุงูุงุณุชูุงู ุดู ุจุชุญุจุ (ุจููู/USDT/ูุฑู) ๐",
  ]
    .filter(Boolean)
    .join("\n");
}

async function askAI(
  userText,
  { history = [], dialect = "shami", context = "" } = {}
) {
  const system = buildSystemPrompt({ dialect, context });

  const messages = [
    { role: "system", content: system },
    // few-shot ูุตูุฑุฉ ูุชุซุจูุช ุงููุจุฑุฉ
    { role: "user", content: "ุจุฏู ุงูุฑุงุจุท" },
    { role: "assistant", content: `ุฑุงุจุทูุง: ${SITE_URL} โ` },
    { role: "user", content: "ุจุฏู ุงุดุญู 100 ุณูุฑูุชูู ูุงุด" },
    {
      role: "assistant",
      content: "ุชูุงูโุงุจุนุช ุงููID ูุฑุญ ูุฌููุฒ ุงูุทูุจ. ุงูุฏูุน ุณูุฑูุชูู ูุงุด ๐ณ",
    },
    ...history,
    { role: "user", content: userText },
  ];

  try {
    const r = await axios.post(
      CHAT_URL,
      {
        model: AI_MODEL,
        messages,
        stream: false,
        options: {
          num_predict: 90,
          temperature: Number(process.env.AI_TEMPERATURE ?? 0.25),
          top_p: 0.9,
          top_k: 40,
          repeat_penalty: 1.15,
          num_ctx: 2048,
        },
      },
      { timeout: 30000 }
    );

    const raw =
      (r.data?.message?.content || "").trim() ||
      "ุชูุงูโุฎุจุฑูู ุงููุจูุบ ูุงููุนุฑูู ูุทุฑููุฉ ุงูุฏูุน ููููู ูู ุจุณุฑุนุฉ ๐";

    return clampTwoLines(toShami(raw));
  } catch (err) {
    console.error("AI error:", err?.response?.data || err.message);
    return "ุตุงุฑ ุฎูู ุจุณูุท. ุฎุจุฑูู ุทูุจู ุจุงุฎุชุตุงุฑ (ุดุญู/ุณุญุจ + ุงููุจูุบ + ุงููุนุฑูู) ูุจูุดูู ๐";
  }
}

module.exports = { askAI, buildSystemPrompt };
