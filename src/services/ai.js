const axios = require("axios");

const SITE_URL = process.env.SITE_URL || "https://www.ichancy.com/";
const AI_MODEL = process.env.AI_MODEL || "qwen2.5:7b-instruct-q4_K_M";
const OLLAMA_BASE =
  process.env.OLLAMA_BASE_URL ||
  (process.env.OLLAMA_URL || "").replace(/\/api\/.*$/, "") ||
  "http://ollama:11434";
const CHAT_URL = `${OLLAMA_BASE.replace(/\/$/, "")}/api/chat`;

function toShami(s = "") {
  // ุชูููุน ุฎููู ููุดุงูู
  return s
    .replace(/ูุฑุฌู|ูู ูุถูู|ุงูุฑุฌุงุก/g, "ูู ุณูุญุช")
    .replace(/ุณูู /g, "ุฑุญ ")
    .replace(/ุงููููุฉ/g, "ุงููุจูุบ")
    .replace(/\s+/g, " ")
    .trim();
}
function clampTwoLines(s, max = 170) {
  let t = s.replace(/[*_`>~]/g, "").trim();
  if (t.length > max) t = t.slice(0, max - 1) + "โฆ";
  return t.split(/\n+/).slice(0, 2).join("\n");
}

function buildSystemPrompt({ context = "" } = {}) {
  return [
    "ุฃูุช ูุณุงุนุฏ ูุงุชุณุงุจ ูุฎุฏูุฉ ุดุญู/ุณุญุจ ุฑุตูุฏ ุนูู ูููุน ุงูุดุงูุณู.",
    "ุงูุชุจ ุจุงูููุฌุฉ ุงูุดุงููุฉ ุงูููููุฉ (ุชูุงูุ ุดูุ ูุฏูุดุ ุฏุบุฑู).",
    "ุฑุฏ ูุฎุชุตุฑ ุฌุฏูุง: ุณุทุฑ ุฃู ุณุทุฑูู ููุท. ุงุณุชุฎุฏู ุฅูููุฌู ุฎูููุฉ (๐โโณ๐ณ) ุฅุฐุง ูุฒู.",
    `ูุง ุชุนุทู ุฑูุงุจุท ุบูุฑ ${SITE_URL} ููุง ุชุฎุชูู ูุนูููุงุช.`,
    "ูู ููุตุช ูุนูููุฉุ ุงุณุฃู *ุณุคุงู ูุงุญุฏ ูุญุฏุฏ* ููุท ููุง ุชูุฑุฑ ุงูุณุคุงู ุงูุณุงุจู.",
    "ููุดุญู: (ุงููุนุจุฉ/ุงูููุตูุฉุ ุงููุจูุบุ ุงููIDุ ุทุฑููุฉ ุงูุฏูุน). ููุณุญุจ: (ุงููุจูุบุ ุทุฑููุฉ ุงูุงุณุชูุงูุ ุญุณุงุจ/ูุนุฑูู ุงูุงุณุชูุงู).",
    context ? `ูุนูููุงุช ูู ูุงุนุฏุฉ ุงููุนุฑูุฉ:\n${context}` : "",
    "ุฃูุซูุฉ:",
    `ุงููุณุชุฎุฏู: ุจุฏู ุงูุฑุงุจุท\nุงููุณุงุนุฏ: ุฑุงุจุทูุง: ${SITE_URL} โ`,
    "ุงููุณุชุฎุฏู: ุจุฏู ุงุดุญู 20000 ู MLBB\nุงููุณุงุนุฏ: ุชูุงู! ุงุจุนุช ุงููID ูุทุฑููุฉ ุงูุฏูุน (ุณูุฑูุชูู ูุงุด/USDT/ุจููู) ๐",
  ]
    .filter(Boolean)
    .join("\n");
}

async function askAI(userText, { history = [], context = "" } = {}) {
  const messages = [
    { role: "system", content: buildSystemPrompt({ context }) },
    ...history,
    { role: "user", content: userText },
  ];

  try {
    const r = await axios.post(
      CHAT_URL,
      {
        model: AI_MODEL,
        messages,
        stream: false,
        options: {
          // ุฃุณุฑุน + ุทุงุฆุน
          num_predict: 64, // ูููู ุงูุทูู ูุณุฑุนุฉ ุฃุนูู
          temperature: Number(process.env.AI_TEMPERATURE ?? 0.2),
          top_p: 0.9,
          top_k: 40,
          repeat_penalty: 1.15,
          num_ctx: 2048,
          // ููุงุท ุชููู ูุชูุตูุฑ ุงูุฑุฏ
          stop: ["\n\nุงููุณุชุฎุฏู:", "\n\nUser:", "\n\nassistant:"],
        },
      },
      { timeout: 90000 } // 90 ุซุงููุฉ ูุชูุงุฏู ุฃูู ุชุญููู ุจุทูุก
    );

    const raw =
      (r.data?.message?.content || "").trim() ||
      "ุชูุงูโุงูุชุจ ุทูุจู ุจุงุฎุชุตุงุฑ (ุดุญู/ุณุญุจ + ุงููุจูุบ + ุงููุนุฑู) ๐";
    return clampTwoLines(toShami(raw));
  } catch (err) {
    console.error("AI error:", err?.response?.data || err.message);
    return "ุชุนุทูู ูุคูุชโฆ ุงูุชุจ ุทูุจู ุณุทุฑ ูุงุญุฏ (ุดุญู/ุณุญุจ + ุงููุจูุบ + ุงููID) ูุจูุดูู ๐";
  }
}

module.exports = { askAI };
